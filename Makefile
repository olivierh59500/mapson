# Makefile.in generated by automake 1.10 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Build mapSoN
#




pkgdatadir = $(datadir)/mapson
pkglibdir = $(libdir)/mapson
pkgincludedir = $(includedir)/mapson
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = mapson$(EXEEXT)
#am__append_1 = -Igetopt
#am__append_2 = libgetopt/getopt.c libgetopt/getopt1.c
#am__append_3 = -Ilibenv -DUSE_MY_SETENV
#am__append_4 = libenv/setenv.c
#am__append_5 = -Ilibenv -DUSE_MY_UNSETENV
#am__append_6 = libenv/unsetenv.c
check_PROGRAMS = md5test$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/configure COPYING.LIB ChangeLog depcomp \
	install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" \
	"$(DESTDIR)$(datadir)" "$(DESTDIR)$(sysconfdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__mapson_SOURCES_DIST = accept-confirmation.cpp address-db.cpp \
	config.cpp deliver.cpp extract-addresses.cpp log.cpp \
	mapson.cpp multi-open.cpp parse-config-file.cpp \
	request-confirmation.cpp md5.c rfc822-lexer.cpp \
	rfc822-parser.cpp rfc822.hpp spool.cpp lines2regex.cpp \
	libgetopt/getopt.c libgetopt/getopt1.c libenv/setenv.c \
	libenv/unsetenv.c
#am__objects_1 = mapson-getopt.$(OBJEXT) \
#	mapson-getopt1.$(OBJEXT)
#am__objects_2 = mapson-setenv.$(OBJEXT)
#am__objects_3 = mapson-unsetenv.$(OBJEXT)
am_mapson_OBJECTS = mapson-accept-confirmation.$(OBJEXT) \
	mapson-address-db.$(OBJEXT) mapson-config.$(OBJEXT) \
	mapson-deliver.$(OBJEXT) mapson-extract-addresses.$(OBJEXT) \
	mapson-log.$(OBJEXT) mapson-mapson.$(OBJEXT) \
	mapson-multi-open.$(OBJEXT) mapson-parse-config-file.$(OBJEXT) \
	mapson-request-confirmation.$(OBJEXT) mapson-md5.$(OBJEXT) \
	mapson-rfc822-lexer.$(OBJEXT) mapson-rfc822-parser.$(OBJEXT) \
	mapson-spool.$(OBJEXT) mapson-lines2regex.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2) $(am__objects_3)
mapson_OBJECTS = $(am_mapson_OBJECTS)
mapson_DEPENDENCIES = varexp/libvarexp.a hashcash/libhashcash.a
am_md5test_OBJECTS = md5test.$(OBJEXT)
md5test_OBJECTS = $(am_md5test_OBJECTS)
md5test_DEPENDENCIES = md5.o
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(mapson_SOURCES) $(md5test_SOURCES)
DIST_SOURCES = $(am__mapson_SOURCES_DIST) $(md5test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man_MANS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
dataDATA_INSTALL = $(INSTALL_DATA)
sysconfDATA_INSTALL = $(INSTALL_DATA)
DATA = $(data_DATA) $(sysconf_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/simons/cxx/mapson/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/simons/cxx/mapson/missing --run tar
AUTOCONF = ${SHELL} /home/simons/cxx/mapson/missing --run autoconf
AUTOHEADER = ${SHELL} /home/simons/cxx/mapson/missing --run autoheader
AUTOMAKE = ${SHELL} /home/simons/cxx/mapson/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPPFLAGS =  -DDEBUG
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"mapson\" -DPACKAGE_TARNAME=\"mapson\" -DPACKAGE_VERSION=\"3.2-beta-1\" -DPACKAGE_STRING=\"mapson\ 3.2-beta-1\" -DPACKAGE_BUGREPORT=\"simons@cryp.to\" -DPACKAGE=\"mapson\" -DVERSION=\"3.2-beta-1\" -D_FILE_OFFSET_BITS=64
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/simons/cxx/mapson/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = mapson
PACKAGE_BUGREPORT = simons@cryp.to
PACKAGE_NAME = mapson
PACKAGE_STRING = mapson 3.2-beta-1
PACKAGE_TARNAME = mapson
PACKAGE_VERSION = 3.2-beta-1
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 3.2-beta-1
abs_builddir = /home/simons/cxx/mapson
abs_srcdir = /home/simons/cxx/mapson
abs_top_builddir = /home/simons/cxx/mapson
abs_top_srcdir = /home/simons/cxx/mapson
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /tmp/mapson-bin
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/simons/cxx/mapson/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mailboxdir = /var/spool/mail
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
mta = /usr/sbin/sendmail
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /tmp/mapson-bin
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = .
top_srcdir = .
mapson_SOURCES = accept-confirmation.cpp address-db.cpp config.cpp \
	deliver.cpp extract-addresses.cpp log.cpp mapson.cpp \
	multi-open.cpp parse-config-file.cpp request-confirmation.cpp \
	md5.c rfc822-lexer.cpp rfc822-parser.cpp rfc822.hpp spool.cpp \
	lines2regex.cpp $(am__append_2) $(am__append_4) \
	$(am__append_6)
mapson_CPPFLAGS = -DMAILBOXDIR=\"${mailboxdir}\" -DMTA=\"${mta}\" \
	-DSYSCONFDIR=\"${sysconfdir}\" -DDATADIR=\"${datadir}\" \
	$(am__append_1) $(am__append_3) $(am__append_5)
noinst_HEADERS = mapson.hpp parse-config-file.hpp regexp.hpp	\
		  rfc822.hpp system-error.hpp

mapson_LDADD = varexp/libvarexp.a hashcash/libhashcash.a
SUBDIRS = varexp hashcash
man_MANS = mapson.1
EXTRA_DIST = libhashcash/LICENSE sample-challenge-template \
                  sample-config ${man_MANS} mapson.html

sysconf_DATA = sample-config
data_DATA = sample-challenge-template mapson.html
CLEANFILES = manpage.links manpage.refs mapson-*.tar.gz VERSION
MAINTAINERCLEANFILES = mapson.1 mapson.html
md5test_SOURCES = md5test.c
md5test_LDADD = md5.o
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
mapson$(EXEEXT): $(mapson_OBJECTS) $(mapson_DEPENDENCIES) 
	@rm -f mapson$(EXEEXT)
	$(CXXLINK) $(mapson_OBJECTS) $(mapson_LDADD) $(LIBS)
md5test$(EXEEXT): $(md5test_OBJECTS) $(md5test_DEPENDENCIES) 
	@rm -f md5test$(EXEEXT)
	$(LINK) $(md5test_OBJECTS) $(md5test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/mapson-accept-confirmation.Po
include ./$(DEPDIR)/mapson-address-db.Po
include ./$(DEPDIR)/mapson-config.Po
include ./$(DEPDIR)/mapson-deliver.Po
include ./$(DEPDIR)/mapson-extract-addresses.Po
include ./$(DEPDIR)/mapson-getopt.Po
include ./$(DEPDIR)/mapson-getopt1.Po
include ./$(DEPDIR)/mapson-lines2regex.Po
include ./$(DEPDIR)/mapson-log.Po
include ./$(DEPDIR)/mapson-mapson.Po
include ./$(DEPDIR)/mapson-md5.Po
include ./$(DEPDIR)/mapson-multi-open.Po
include ./$(DEPDIR)/mapson-parse-config-file.Po
include ./$(DEPDIR)/mapson-request-confirmation.Po
include ./$(DEPDIR)/mapson-rfc822-lexer.Po
include ./$(DEPDIR)/mapson-rfc822-parser.Po
include ./$(DEPDIR)/mapson-setenv.Po
include ./$(DEPDIR)/mapson-spool.Po
include ./$(DEPDIR)/mapson-unsetenv.Po
include ./$(DEPDIR)/md5test.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

mapson-md5.o: md5.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-md5.o -MD -MP -MF $(DEPDIR)/mapson-md5.Tpo -c -o mapson-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
	mv -f $(DEPDIR)/mapson-md5.Tpo $(DEPDIR)/mapson-md5.Po
#	source='md5.c' object='mapson-md5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

mapson-md5.obj: md5.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-md5.obj -MD -MP -MF $(DEPDIR)/mapson-md5.Tpo -c -o mapson-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`
	mv -f $(DEPDIR)/mapson-md5.Tpo $(DEPDIR)/mapson-md5.Po
#	source='md5.c' object='mapson-md5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`

mapson-getopt.o: libgetopt/getopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-getopt.o -MD -MP -MF $(DEPDIR)/mapson-getopt.Tpo -c -o mapson-getopt.o `test -f 'libgetopt/getopt.c' || echo '$(srcdir)/'`libgetopt/getopt.c
	mv -f $(DEPDIR)/mapson-getopt.Tpo $(DEPDIR)/mapson-getopt.Po
#	source='libgetopt/getopt.c' object='mapson-getopt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-getopt.o `test -f 'libgetopt/getopt.c' || echo '$(srcdir)/'`libgetopt/getopt.c

mapson-getopt.obj: libgetopt/getopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-getopt.obj -MD -MP -MF $(DEPDIR)/mapson-getopt.Tpo -c -o mapson-getopt.obj `if test -f 'libgetopt/getopt.c'; then $(CYGPATH_W) 'libgetopt/getopt.c'; else $(CYGPATH_W) '$(srcdir)/libgetopt/getopt.c'; fi`
	mv -f $(DEPDIR)/mapson-getopt.Tpo $(DEPDIR)/mapson-getopt.Po
#	source='libgetopt/getopt.c' object='mapson-getopt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-getopt.obj `if test -f 'libgetopt/getopt.c'; then $(CYGPATH_W) 'libgetopt/getopt.c'; else $(CYGPATH_W) '$(srcdir)/libgetopt/getopt.c'; fi`

mapson-getopt1.o: libgetopt/getopt1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-getopt1.o -MD -MP -MF $(DEPDIR)/mapson-getopt1.Tpo -c -o mapson-getopt1.o `test -f 'libgetopt/getopt1.c' || echo '$(srcdir)/'`libgetopt/getopt1.c
	mv -f $(DEPDIR)/mapson-getopt1.Tpo $(DEPDIR)/mapson-getopt1.Po
#	source='libgetopt/getopt1.c' object='mapson-getopt1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-getopt1.o `test -f 'libgetopt/getopt1.c' || echo '$(srcdir)/'`libgetopt/getopt1.c

mapson-getopt1.obj: libgetopt/getopt1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-getopt1.obj -MD -MP -MF $(DEPDIR)/mapson-getopt1.Tpo -c -o mapson-getopt1.obj `if test -f 'libgetopt/getopt1.c'; then $(CYGPATH_W) 'libgetopt/getopt1.c'; else $(CYGPATH_W) '$(srcdir)/libgetopt/getopt1.c'; fi`
	mv -f $(DEPDIR)/mapson-getopt1.Tpo $(DEPDIR)/mapson-getopt1.Po
#	source='libgetopt/getopt1.c' object='mapson-getopt1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-getopt1.obj `if test -f 'libgetopt/getopt1.c'; then $(CYGPATH_W) 'libgetopt/getopt1.c'; else $(CYGPATH_W) '$(srcdir)/libgetopt/getopt1.c'; fi`

mapson-setenv.o: libenv/setenv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-setenv.o -MD -MP -MF $(DEPDIR)/mapson-setenv.Tpo -c -o mapson-setenv.o `test -f 'libenv/setenv.c' || echo '$(srcdir)/'`libenv/setenv.c
	mv -f $(DEPDIR)/mapson-setenv.Tpo $(DEPDIR)/mapson-setenv.Po
#	source='libenv/setenv.c' object='mapson-setenv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-setenv.o `test -f 'libenv/setenv.c' || echo '$(srcdir)/'`libenv/setenv.c

mapson-setenv.obj: libenv/setenv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-setenv.obj -MD -MP -MF $(DEPDIR)/mapson-setenv.Tpo -c -o mapson-setenv.obj `if test -f 'libenv/setenv.c'; then $(CYGPATH_W) 'libenv/setenv.c'; else $(CYGPATH_W) '$(srcdir)/libenv/setenv.c'; fi`
	mv -f $(DEPDIR)/mapson-setenv.Tpo $(DEPDIR)/mapson-setenv.Po
#	source='libenv/setenv.c' object='mapson-setenv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-setenv.obj `if test -f 'libenv/setenv.c'; then $(CYGPATH_W) 'libenv/setenv.c'; else $(CYGPATH_W) '$(srcdir)/libenv/setenv.c'; fi`

mapson-unsetenv.o: libenv/unsetenv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-unsetenv.o -MD -MP -MF $(DEPDIR)/mapson-unsetenv.Tpo -c -o mapson-unsetenv.o `test -f 'libenv/unsetenv.c' || echo '$(srcdir)/'`libenv/unsetenv.c
	mv -f $(DEPDIR)/mapson-unsetenv.Tpo $(DEPDIR)/mapson-unsetenv.Po
#	source='libenv/unsetenv.c' object='mapson-unsetenv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-unsetenv.o `test -f 'libenv/unsetenv.c' || echo '$(srcdir)/'`libenv/unsetenv.c

mapson-unsetenv.obj: libenv/unsetenv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mapson-unsetenv.obj -MD -MP -MF $(DEPDIR)/mapson-unsetenv.Tpo -c -o mapson-unsetenv.obj `if test -f 'libenv/unsetenv.c'; then $(CYGPATH_W) 'libenv/unsetenv.c'; else $(CYGPATH_W) '$(srcdir)/libenv/unsetenv.c'; fi`
	mv -f $(DEPDIR)/mapson-unsetenv.Tpo $(DEPDIR)/mapson-unsetenv.Po
#	source='libenv/unsetenv.c' object='mapson-unsetenv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mapson-unsetenv.obj `if test -f 'libenv/unsetenv.c'; then $(CYGPATH_W) 'libenv/unsetenv.c'; else $(CYGPATH_W) '$(srcdir)/libenv/unsetenv.c'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

mapson-accept-confirmation.o: accept-confirmation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-accept-confirmation.o -MD -MP -MF $(DEPDIR)/mapson-accept-confirmation.Tpo -c -o mapson-accept-confirmation.o `test -f 'accept-confirmation.cpp' || echo '$(srcdir)/'`accept-confirmation.cpp
	mv -f $(DEPDIR)/mapson-accept-confirmation.Tpo $(DEPDIR)/mapson-accept-confirmation.Po
#	source='accept-confirmation.cpp' object='mapson-accept-confirmation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-accept-confirmation.o `test -f 'accept-confirmation.cpp' || echo '$(srcdir)/'`accept-confirmation.cpp

mapson-accept-confirmation.obj: accept-confirmation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-accept-confirmation.obj -MD -MP -MF $(DEPDIR)/mapson-accept-confirmation.Tpo -c -o mapson-accept-confirmation.obj `if test -f 'accept-confirmation.cpp'; then $(CYGPATH_W) 'accept-confirmation.cpp'; else $(CYGPATH_W) '$(srcdir)/accept-confirmation.cpp'; fi`
	mv -f $(DEPDIR)/mapson-accept-confirmation.Tpo $(DEPDIR)/mapson-accept-confirmation.Po
#	source='accept-confirmation.cpp' object='mapson-accept-confirmation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-accept-confirmation.obj `if test -f 'accept-confirmation.cpp'; then $(CYGPATH_W) 'accept-confirmation.cpp'; else $(CYGPATH_W) '$(srcdir)/accept-confirmation.cpp'; fi`

mapson-address-db.o: address-db.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-address-db.o -MD -MP -MF $(DEPDIR)/mapson-address-db.Tpo -c -o mapson-address-db.o `test -f 'address-db.cpp' || echo '$(srcdir)/'`address-db.cpp
	mv -f $(DEPDIR)/mapson-address-db.Tpo $(DEPDIR)/mapson-address-db.Po
#	source='address-db.cpp' object='mapson-address-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-address-db.o `test -f 'address-db.cpp' || echo '$(srcdir)/'`address-db.cpp

mapson-address-db.obj: address-db.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-address-db.obj -MD -MP -MF $(DEPDIR)/mapson-address-db.Tpo -c -o mapson-address-db.obj `if test -f 'address-db.cpp'; then $(CYGPATH_W) 'address-db.cpp'; else $(CYGPATH_W) '$(srcdir)/address-db.cpp'; fi`
	mv -f $(DEPDIR)/mapson-address-db.Tpo $(DEPDIR)/mapson-address-db.Po
#	source='address-db.cpp' object='mapson-address-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-address-db.obj `if test -f 'address-db.cpp'; then $(CYGPATH_W) 'address-db.cpp'; else $(CYGPATH_W) '$(srcdir)/address-db.cpp'; fi`

mapson-config.o: config.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-config.o -MD -MP -MF $(DEPDIR)/mapson-config.Tpo -c -o mapson-config.o `test -f 'config.cpp' || echo '$(srcdir)/'`config.cpp
	mv -f $(DEPDIR)/mapson-config.Tpo $(DEPDIR)/mapson-config.Po
#	source='config.cpp' object='mapson-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-config.o `test -f 'config.cpp' || echo '$(srcdir)/'`config.cpp

mapson-config.obj: config.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-config.obj -MD -MP -MF $(DEPDIR)/mapson-config.Tpo -c -o mapson-config.obj `if test -f 'config.cpp'; then $(CYGPATH_W) 'config.cpp'; else $(CYGPATH_W) '$(srcdir)/config.cpp'; fi`
	mv -f $(DEPDIR)/mapson-config.Tpo $(DEPDIR)/mapson-config.Po
#	source='config.cpp' object='mapson-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-config.obj `if test -f 'config.cpp'; then $(CYGPATH_W) 'config.cpp'; else $(CYGPATH_W) '$(srcdir)/config.cpp'; fi`

mapson-deliver.o: deliver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-deliver.o -MD -MP -MF $(DEPDIR)/mapson-deliver.Tpo -c -o mapson-deliver.o `test -f 'deliver.cpp' || echo '$(srcdir)/'`deliver.cpp
	mv -f $(DEPDIR)/mapson-deliver.Tpo $(DEPDIR)/mapson-deliver.Po
#	source='deliver.cpp' object='mapson-deliver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-deliver.o `test -f 'deliver.cpp' || echo '$(srcdir)/'`deliver.cpp

mapson-deliver.obj: deliver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-deliver.obj -MD -MP -MF $(DEPDIR)/mapson-deliver.Tpo -c -o mapson-deliver.obj `if test -f 'deliver.cpp'; then $(CYGPATH_W) 'deliver.cpp'; else $(CYGPATH_W) '$(srcdir)/deliver.cpp'; fi`
	mv -f $(DEPDIR)/mapson-deliver.Tpo $(DEPDIR)/mapson-deliver.Po
#	source='deliver.cpp' object='mapson-deliver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-deliver.obj `if test -f 'deliver.cpp'; then $(CYGPATH_W) 'deliver.cpp'; else $(CYGPATH_W) '$(srcdir)/deliver.cpp'; fi`

mapson-extract-addresses.o: extract-addresses.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-extract-addresses.o -MD -MP -MF $(DEPDIR)/mapson-extract-addresses.Tpo -c -o mapson-extract-addresses.o `test -f 'extract-addresses.cpp' || echo '$(srcdir)/'`extract-addresses.cpp
	mv -f $(DEPDIR)/mapson-extract-addresses.Tpo $(DEPDIR)/mapson-extract-addresses.Po
#	source='extract-addresses.cpp' object='mapson-extract-addresses.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-extract-addresses.o `test -f 'extract-addresses.cpp' || echo '$(srcdir)/'`extract-addresses.cpp

mapson-extract-addresses.obj: extract-addresses.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-extract-addresses.obj -MD -MP -MF $(DEPDIR)/mapson-extract-addresses.Tpo -c -o mapson-extract-addresses.obj `if test -f 'extract-addresses.cpp'; then $(CYGPATH_W) 'extract-addresses.cpp'; else $(CYGPATH_W) '$(srcdir)/extract-addresses.cpp'; fi`
	mv -f $(DEPDIR)/mapson-extract-addresses.Tpo $(DEPDIR)/mapson-extract-addresses.Po
#	source='extract-addresses.cpp' object='mapson-extract-addresses.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-extract-addresses.obj `if test -f 'extract-addresses.cpp'; then $(CYGPATH_W) 'extract-addresses.cpp'; else $(CYGPATH_W) '$(srcdir)/extract-addresses.cpp'; fi`

mapson-log.o: log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-log.o -MD -MP -MF $(DEPDIR)/mapson-log.Tpo -c -o mapson-log.o `test -f 'log.cpp' || echo '$(srcdir)/'`log.cpp
	mv -f $(DEPDIR)/mapson-log.Tpo $(DEPDIR)/mapson-log.Po
#	source='log.cpp' object='mapson-log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-log.o `test -f 'log.cpp' || echo '$(srcdir)/'`log.cpp

mapson-log.obj: log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-log.obj -MD -MP -MF $(DEPDIR)/mapson-log.Tpo -c -o mapson-log.obj `if test -f 'log.cpp'; then $(CYGPATH_W) 'log.cpp'; else $(CYGPATH_W) '$(srcdir)/log.cpp'; fi`
	mv -f $(DEPDIR)/mapson-log.Tpo $(DEPDIR)/mapson-log.Po
#	source='log.cpp' object='mapson-log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-log.obj `if test -f 'log.cpp'; then $(CYGPATH_W) 'log.cpp'; else $(CYGPATH_W) '$(srcdir)/log.cpp'; fi`

mapson-mapson.o: mapson.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-mapson.o -MD -MP -MF $(DEPDIR)/mapson-mapson.Tpo -c -o mapson-mapson.o `test -f 'mapson.cpp' || echo '$(srcdir)/'`mapson.cpp
	mv -f $(DEPDIR)/mapson-mapson.Tpo $(DEPDIR)/mapson-mapson.Po
#	source='mapson.cpp' object='mapson-mapson.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-mapson.o `test -f 'mapson.cpp' || echo '$(srcdir)/'`mapson.cpp

mapson-mapson.obj: mapson.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-mapson.obj -MD -MP -MF $(DEPDIR)/mapson-mapson.Tpo -c -o mapson-mapson.obj `if test -f 'mapson.cpp'; then $(CYGPATH_W) 'mapson.cpp'; else $(CYGPATH_W) '$(srcdir)/mapson.cpp'; fi`
	mv -f $(DEPDIR)/mapson-mapson.Tpo $(DEPDIR)/mapson-mapson.Po
#	source='mapson.cpp' object='mapson-mapson.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-mapson.obj `if test -f 'mapson.cpp'; then $(CYGPATH_W) 'mapson.cpp'; else $(CYGPATH_W) '$(srcdir)/mapson.cpp'; fi`

mapson-multi-open.o: multi-open.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-multi-open.o -MD -MP -MF $(DEPDIR)/mapson-multi-open.Tpo -c -o mapson-multi-open.o `test -f 'multi-open.cpp' || echo '$(srcdir)/'`multi-open.cpp
	mv -f $(DEPDIR)/mapson-multi-open.Tpo $(DEPDIR)/mapson-multi-open.Po
#	source='multi-open.cpp' object='mapson-multi-open.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-multi-open.o `test -f 'multi-open.cpp' || echo '$(srcdir)/'`multi-open.cpp

mapson-multi-open.obj: multi-open.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-multi-open.obj -MD -MP -MF $(DEPDIR)/mapson-multi-open.Tpo -c -o mapson-multi-open.obj `if test -f 'multi-open.cpp'; then $(CYGPATH_W) 'multi-open.cpp'; else $(CYGPATH_W) '$(srcdir)/multi-open.cpp'; fi`
	mv -f $(DEPDIR)/mapson-multi-open.Tpo $(DEPDIR)/mapson-multi-open.Po
#	source='multi-open.cpp' object='mapson-multi-open.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-multi-open.obj `if test -f 'multi-open.cpp'; then $(CYGPATH_W) 'multi-open.cpp'; else $(CYGPATH_W) '$(srcdir)/multi-open.cpp'; fi`

mapson-parse-config-file.o: parse-config-file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-parse-config-file.o -MD -MP -MF $(DEPDIR)/mapson-parse-config-file.Tpo -c -o mapson-parse-config-file.o `test -f 'parse-config-file.cpp' || echo '$(srcdir)/'`parse-config-file.cpp
	mv -f $(DEPDIR)/mapson-parse-config-file.Tpo $(DEPDIR)/mapson-parse-config-file.Po
#	source='parse-config-file.cpp' object='mapson-parse-config-file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-parse-config-file.o `test -f 'parse-config-file.cpp' || echo '$(srcdir)/'`parse-config-file.cpp

mapson-parse-config-file.obj: parse-config-file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-parse-config-file.obj -MD -MP -MF $(DEPDIR)/mapson-parse-config-file.Tpo -c -o mapson-parse-config-file.obj `if test -f 'parse-config-file.cpp'; then $(CYGPATH_W) 'parse-config-file.cpp'; else $(CYGPATH_W) '$(srcdir)/parse-config-file.cpp'; fi`
	mv -f $(DEPDIR)/mapson-parse-config-file.Tpo $(DEPDIR)/mapson-parse-config-file.Po
#	source='parse-config-file.cpp' object='mapson-parse-config-file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-parse-config-file.obj `if test -f 'parse-config-file.cpp'; then $(CYGPATH_W) 'parse-config-file.cpp'; else $(CYGPATH_W) '$(srcdir)/parse-config-file.cpp'; fi`

mapson-request-confirmation.o: request-confirmation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-request-confirmation.o -MD -MP -MF $(DEPDIR)/mapson-request-confirmation.Tpo -c -o mapson-request-confirmation.o `test -f 'request-confirmation.cpp' || echo '$(srcdir)/'`request-confirmation.cpp
	mv -f $(DEPDIR)/mapson-request-confirmation.Tpo $(DEPDIR)/mapson-request-confirmation.Po
#	source='request-confirmation.cpp' object='mapson-request-confirmation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-request-confirmation.o `test -f 'request-confirmation.cpp' || echo '$(srcdir)/'`request-confirmation.cpp

mapson-request-confirmation.obj: request-confirmation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-request-confirmation.obj -MD -MP -MF $(DEPDIR)/mapson-request-confirmation.Tpo -c -o mapson-request-confirmation.obj `if test -f 'request-confirmation.cpp'; then $(CYGPATH_W) 'request-confirmation.cpp'; else $(CYGPATH_W) '$(srcdir)/request-confirmation.cpp'; fi`
	mv -f $(DEPDIR)/mapson-request-confirmation.Tpo $(DEPDIR)/mapson-request-confirmation.Po
#	source='request-confirmation.cpp' object='mapson-request-confirmation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-request-confirmation.obj `if test -f 'request-confirmation.cpp'; then $(CYGPATH_W) 'request-confirmation.cpp'; else $(CYGPATH_W) '$(srcdir)/request-confirmation.cpp'; fi`

mapson-rfc822-lexer.o: rfc822-lexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-rfc822-lexer.o -MD -MP -MF $(DEPDIR)/mapson-rfc822-lexer.Tpo -c -o mapson-rfc822-lexer.o `test -f 'rfc822-lexer.cpp' || echo '$(srcdir)/'`rfc822-lexer.cpp
	mv -f $(DEPDIR)/mapson-rfc822-lexer.Tpo $(DEPDIR)/mapson-rfc822-lexer.Po
#	source='rfc822-lexer.cpp' object='mapson-rfc822-lexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-rfc822-lexer.o `test -f 'rfc822-lexer.cpp' || echo '$(srcdir)/'`rfc822-lexer.cpp

mapson-rfc822-lexer.obj: rfc822-lexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-rfc822-lexer.obj -MD -MP -MF $(DEPDIR)/mapson-rfc822-lexer.Tpo -c -o mapson-rfc822-lexer.obj `if test -f 'rfc822-lexer.cpp'; then $(CYGPATH_W) 'rfc822-lexer.cpp'; else $(CYGPATH_W) '$(srcdir)/rfc822-lexer.cpp'; fi`
	mv -f $(DEPDIR)/mapson-rfc822-lexer.Tpo $(DEPDIR)/mapson-rfc822-lexer.Po
#	source='rfc822-lexer.cpp' object='mapson-rfc822-lexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-rfc822-lexer.obj `if test -f 'rfc822-lexer.cpp'; then $(CYGPATH_W) 'rfc822-lexer.cpp'; else $(CYGPATH_W) '$(srcdir)/rfc822-lexer.cpp'; fi`

mapson-rfc822-parser.o: rfc822-parser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-rfc822-parser.o -MD -MP -MF $(DEPDIR)/mapson-rfc822-parser.Tpo -c -o mapson-rfc822-parser.o `test -f 'rfc822-parser.cpp' || echo '$(srcdir)/'`rfc822-parser.cpp
	mv -f $(DEPDIR)/mapson-rfc822-parser.Tpo $(DEPDIR)/mapson-rfc822-parser.Po
#	source='rfc822-parser.cpp' object='mapson-rfc822-parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-rfc822-parser.o `test -f 'rfc822-parser.cpp' || echo '$(srcdir)/'`rfc822-parser.cpp

mapson-rfc822-parser.obj: rfc822-parser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-rfc822-parser.obj -MD -MP -MF $(DEPDIR)/mapson-rfc822-parser.Tpo -c -o mapson-rfc822-parser.obj `if test -f 'rfc822-parser.cpp'; then $(CYGPATH_W) 'rfc822-parser.cpp'; else $(CYGPATH_W) '$(srcdir)/rfc822-parser.cpp'; fi`
	mv -f $(DEPDIR)/mapson-rfc822-parser.Tpo $(DEPDIR)/mapson-rfc822-parser.Po
#	source='rfc822-parser.cpp' object='mapson-rfc822-parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-rfc822-parser.obj `if test -f 'rfc822-parser.cpp'; then $(CYGPATH_W) 'rfc822-parser.cpp'; else $(CYGPATH_W) '$(srcdir)/rfc822-parser.cpp'; fi`

mapson-spool.o: spool.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-spool.o -MD -MP -MF $(DEPDIR)/mapson-spool.Tpo -c -o mapson-spool.o `test -f 'spool.cpp' || echo '$(srcdir)/'`spool.cpp
	mv -f $(DEPDIR)/mapson-spool.Tpo $(DEPDIR)/mapson-spool.Po
#	source='spool.cpp' object='mapson-spool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-spool.o `test -f 'spool.cpp' || echo '$(srcdir)/'`spool.cpp

mapson-spool.obj: spool.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-spool.obj -MD -MP -MF $(DEPDIR)/mapson-spool.Tpo -c -o mapson-spool.obj `if test -f 'spool.cpp'; then $(CYGPATH_W) 'spool.cpp'; else $(CYGPATH_W) '$(srcdir)/spool.cpp'; fi`
	mv -f $(DEPDIR)/mapson-spool.Tpo $(DEPDIR)/mapson-spool.Po
#	source='spool.cpp' object='mapson-spool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-spool.obj `if test -f 'spool.cpp'; then $(CYGPATH_W) 'spool.cpp'; else $(CYGPATH_W) '$(srcdir)/spool.cpp'; fi`

mapson-lines2regex.o: lines2regex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-lines2regex.o -MD -MP -MF $(DEPDIR)/mapson-lines2regex.Tpo -c -o mapson-lines2regex.o `test -f 'lines2regex.cpp' || echo '$(srcdir)/'`lines2regex.cpp
	mv -f $(DEPDIR)/mapson-lines2regex.Tpo $(DEPDIR)/mapson-lines2regex.Po
#	source='lines2regex.cpp' object='mapson-lines2regex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-lines2regex.o `test -f 'lines2regex.cpp' || echo '$(srcdir)/'`lines2regex.cpp

mapson-lines2regex.obj: lines2regex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mapson-lines2regex.obj -MD -MP -MF $(DEPDIR)/mapson-lines2regex.Tpo -c -o mapson-lines2regex.obj `if test -f 'lines2regex.cpp'; then $(CYGPATH_W) 'lines2regex.cpp'; else $(CYGPATH_W) '$(srcdir)/lines2regex.cpp'; fi`
	mv -f $(DEPDIR)/mapson-lines2regex.Tpo $(DEPDIR)/mapson-lines2regex.Po
#	source='lines2regex.cpp' object='mapson-lines2regex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mapson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapson-lines2regex.obj `if test -f 'lines2regex.cpp'; then $(CYGPATH_W) 'lines2regex.cpp'; else $(CYGPATH_W) '$(srcdir)/lines2regex.cpp'; fi`
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(MKDIR_P) "$(DESTDIR)$(man1dir)"
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst"; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f '$(DESTDIR)$(man1dir)/$$inst'"; \
	  rm -f "$(DESTDIR)$(man1dir)/$$inst"; \
	done
install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(datadir)" || $(MKDIR_P) "$(DESTDIR)$(datadir)"
	@list='$(data_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(datadir)/$$f'"; \
	  $(dataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(datadir)/$$f"; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(data_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(datadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(datadir)/$$f"; \
	done
install-sysconfDATA: $(sysconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(sysconfdir)" || $(MKDIR_P) "$(DESTDIR)$(sysconfdir)"
	@list='$(sysconf_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(sysconfDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(sysconfdir)/$$f'"; \
	  $(sysconfDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(sysconfdir)/$$f"; \
	done

uninstall-sysconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sysconf_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(sysconfdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sysconfdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d $(distdir) || mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-recursive
all-am: Makefile $(PROGRAMS) $(MANS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(datadir)" "$(DESTDIR)$(sysconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-dataDATA install-man

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS install-sysconfDATA

install-html: install-html-recursive

install-info: install-info-recursive

install-man: install-man1

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dataDATA uninstall-man \
	uninstall-sysconfDATA

uninstall-man: uninstall-man1

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-generic ctags ctags-recursive dist \
	dist-all dist-bzip2 dist-gzip dist-shar dist-tarZ dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-dataDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-man1 install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-sysconfDATA installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dataDATA uninstall-man \
	uninstall-man1 uninstall-sysconfDATA


mapson-mapson.o \
mapson-config.o:        Makefile

mapson.1:
	docbook2man docs/man-page.sgml
	@rm -f manpage.links manpage.refs

mapson.html:
	@echo >VERSION ${PACKAGE_VERSION}
	docbook2html -u docs/mapson.sgml
	@rm -f VERSION
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
